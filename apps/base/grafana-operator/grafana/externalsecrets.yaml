apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: grafana-oidc
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    creationPolicy: Owner
    # this is how the Kind=Secret will look like
    template:
      data:
        GF_AUTH_GENERIC_OAUTH_CLIENT_ID: "{{ .client_id }}"
        GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: "{{ .client_secret }}"

  data:
    - secretKey: client_id
      remoteRef:
        key: grafana-oidc
        property: client_id
    - secretKey: client_secret
      remoteRef:
        key: grafana-oidc
        property: client_secret
---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: grafana-admin
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    creationPolicy: Owner
    # this is how the Kind=Secret will look like
    template:
      data:
        GF_SECURITY_ADMIN_USER: "{{ .admin_user }}"
        GF_SECURITY_ADMIN_PASSWORD: "{{ .admin_password }}"

  data:
    - secretKey: admin_user
      remoteRef:
        key: grafana-admin
        property: username
    - secretKey: admin_password
      remoteRef:
        key: grafana-admin
        property: password
---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: grafana-strava-datasource
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    creationPolicy: Owner
    # this is how the Kind=Secret will look like
    template:
      metadata:
        labels:
          grafana_datasource: "true" # default value for: sidecar.datasources.label
      data:
        strava.yaml: |-
          apiVersion: 1
          datasources:
          - name: Strava
            type: grafana-strava-datasource
            secureJsonData:
              client_id: "{{ .client_id }}"
              client_secret: "{{ .client_secret }}"
            editable: true

  data:
    - secretKey: client_id
      remoteRef:
        key: strava-app
        property: client_id
    - secretKey: client_secret
      remoteRef:
        key: strava-app
        property: client_secret
---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: grafana-github-datasource
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    creationPolicy: Owner
    # this is how the Kind=Secret will look like
    template:
      data:
        app_id: "{{ .app_id | toString }}"
        installation_id: "{{ .installation_id | toString }}"
        private_key: |
          {{ .private_key | toString }}

  data:
    - secretKey: app_id
      remoteRef:
        key: grafana-github-datasource
        property: app_id
    - secretKey: installation_id
      remoteRef:
        key: grafana-github-datasource
        property: installation_id
    - secretKey: private_key
      remoteRef:
        key: grafana-github-datasource
        property: grafana-github-j6nca.private-key.pem
